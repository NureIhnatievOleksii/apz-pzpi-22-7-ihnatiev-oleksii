МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ

ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ
УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ




Лабораторна робота №4


з дисципліни
«Архітектура програмного забезпечення»










Харків 2025
1 ІСТОРІЯ ЗМІН


Таблиця 1 – Історія змін 
№ДатаВерсія звітуОпис змін та виправлень101.06.20250.1Створено розділ «Історія змін»201.06.20250.1Створено розділ «Завдання»301.06.20250.1Створено розділ «Опис виконаної роботи»401.06.20250.1Створено розділ «Висновки»501.06.20250.1Доданий Додаток А601.06.20250.1Доданий Додаток Б701.06.20250.1Доданий Додаток В
 
2 ЗАВДАННЯ


1.	Необхідно розробити мобільний програмний застосунок для будь-якої поширеної на сьогодні мобільної платформи.
2.	Проаналізуйте завдання.
3.	Виконайте контрольні завдання.
4.	Відкрийте створений на попередній лабораторній роботі репозиторій GitHub.
5.	Створіть у репозиторії директорію Task4 та текстовий файл з описом інженерних рішень у цій частині проєкту.
6.	Зафіксуйте кожну внесену зміну командою git commit з відповідним коментарем та фіксуйте цією командою усі наступні зміни у проєкті.
7.	Створіть у директорії Task4 піддиректорію для програмного коду.
8.	Створіть програмний код, завантажте його у створену піддиректорію, зафіксуйте внесені у репозиторії зміни. Виконайте функціональне тестування.
9.	Завантажте створений відеозапис тестування YouTube канал для вашого облікового запису в домені @nure.ua
10.	Створіть для завантаженого запису його хронологічний опис.
11.	Оформіть звіт у форматі pdf та завантажте його на навчальну платформу https://dl.nure.ua/
12.	У коментарях до завантаженого звіту вкажіть посилання на відеозапис тестування у вашому каналі YouTube. 


3 ОПИС ВИКОНАНОЇ РОБОТИ


Програмне забезпечення мобільний програмний застосунок для платформи Android розроблено на мові програмування Dart за допомогою фреймворку Flutter. Мобільний застосунок отримує інформацію про складські приміщення та сенсори в них з серверу. Автентифікація реалізована за допомогою JWT-токенів, які перевіряються на сервері при кожному запиті. 

На рисунку Б.1 у додатку Б наведена ER-діаграма даних.
На рисунку Б.2 у додатку Б наведена Структура бази даних.
На рисунку Б.3 у додатку Б наведена UML-діаграма прецедентів.

4 ВИСНОВКИ


Під час виконання лабораторної роботи було розроблено мобільний програмний застосунок для будь-якої поширеної на сьогодні мобільної платформи.


Додаток А


Посилання на відео та хронологічний опис

Відеозапис доповіді на YouTube: https://youtu.be/TfRPKM4qILk
Хронологічний опис доповіді:
00:00 Вступ
00:11 Реєстрація
00:22 Прогноз погоди
00:26 Зміна міста прогнозу погоди
00:42 Авторизація
00:53 Створення нового пристрою
01:09 Редагування пристрою
01:31 Відправка даних на сервер
01:42 Перегляд даних пристрою
02:24 Видалення пристрою
Додаток Б


Графічні матеріали


Рисунок Б.1 — ER-діаграма даних


Рисунок Б.2 — Структура бази даних


Рисунок Б.3 — UML-діаграма прецедентів
Додаток В


Програмний код

В.1 Математична обробка прикладних даних
GitHub репозиторій: https://github.com/NureAranzhyiRuslan/apz-pzpi-22-7-aranzhyi-ruslan/blob/main/Lab4/apz-pzpi-22-6-aranzhyi-ruslan-lab4/app/src/main/java/com/rdev/nure/apz/components/WeatherForecastCarousel.kt

1   int evaluateAirQuality(Map<String, dynamic> data) {
2     double co = (data["co"] ?? 0).toDouble();
3     double no2 = (data["no2"] ?? 0).toDouble();
4     double pm25 = (data["pm2_5"] ?? 0).toDouble();
5   
6     double coNorm = (co / 10).clamp(0, 1); // допустим 10 ppm максимум
7     double no2Norm = (no2 / 200).clamp(0, 1); // допустим 200 ppb максимум
8     double pm25Norm = (pm25 / 35).clamp(0, 1); // допустим 35 µg/m3 максимум
9   
10    double scoreRaw = 1 - (coNorm * 0.4 + no2Norm * 0.3 + pm25Norm * 0.3);
11    int score = (scoreRaw * 10).round();
12  
13    if (score < 1) score = 1;
14    if (score > 10) score = 10;
15  
16    return score;
17  }
18  
19  void _showAirQualityScore(Map<String, dynamic> data) {
20    final score = evaluateAirQuality(data);
21    showDialog(
22      context: context,
23      builder: (context) => AlertDialog(
24        title: const Text('Оцінка якості повітря'),
25        content: Text('Якість повітря оцінюється в $score з 10 балів.'),
26        actions: [
27          TextButton(
28            child: const Text('Закрити'),
29            onPressed: () => Navigator.of(context).pop(),
30          ),
31        ],
32      ),
33    );
34  }
2


